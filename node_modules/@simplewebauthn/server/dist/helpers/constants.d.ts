declare type COSEInfo = {
    kty: number;
    alg: number;
    crv?: number;
};
/**
 * A mapping of ALG_SIGN hex values (as unsigned shorts) to COSE curve values. Keys should appear as
 * values in a metadata statement's `authenticationAlgorithm` property.
 *
 * From https://fidoalliance.org/specs/fido-v2.0-rd-20180702/fido-registry-v2.0-rd-20180702.html
 * FIDO Registry of Predefined Values - 3.6.1 Authentication Algorithms
 */
export declare const FIDO_METADATA_AUTH_ALG_TO_COSE: {
    [algKey: number]: COSEInfo;
};
/**
 * A map of ATTESTATION hex values (as unsigned shorts). Values should appear in a metadata
 * statement's `attestationTypes` property.
 *
 * From https://fidoalliance.org/specs/fido-v2.0-rd-20180702/fido-registry-v2.0-rd-20180702.html
 * FIDO Registry of Predefined Values - 3.6.3 Authenticator Attestation Types
 */
export declare enum FIDO_METADATA_ATTESTATION_TYPES {
    ATTESTATION_BASIC_FULL = 15879,
    ATTESTATION_BASIC_SURROGATE = 15880,
    ATTESTATION_ECDAA = 15881,
    ATTESTATION_ATTCA = 15882
}
export declare type FIDO_AUTHENTICATOR_STATUS = 'NOT_FIDO_CERTIFIED' | 'FIDO_CERTIFIED' | 'USER_VERIFICATION_BYPASS' | 'ATTESTATION_KEY_COMPROMISE' | 'USER_KEY_REMOTE_COMPROMISE' | 'USER_KEY_PHYSICAL_COMPROMISE' | 'UPDATE_AVAILABLE' | 'REVOKED' | 'SELF_ASSERTION_SUBMITTED' | 'FIDO_CERTIFIED_L1' | 'FIDO_CERTIFIED_L2' | 'FIDO_CERTIFIED_L3' | 'FIDO_CERTIFIED_L4' | 'FIDO_CERTIFIED_L5';
export {};
