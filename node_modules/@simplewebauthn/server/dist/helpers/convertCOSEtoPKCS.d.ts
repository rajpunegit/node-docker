/// <reference types="node" />
import type { SigningSchemeHash } from 'node-rsa';
import { COSEAlgorithmIdentifier } from '@simplewebauthn/typescript-types';
/**
 * Takes COSE-encoded public key and converts it to PKCS key
 */
export default function convertCOSEtoPKCS(cosePublicKey: Buffer): Buffer;
export declare type COSEPublicKey = Map<COSEAlgorithmIdentifier, number | Buffer>;
export declare enum COSEKEYS {
    kty = 1,
    alg = 3,
    crv = -1,
    x = -2,
    y = -3,
    n = -1,
    e = -2
}
export declare enum COSEKTY {
    OKP = 1,
    EC2 = 2,
    RSA = 3
}
export declare const COSERSASCHEME: {
    [key: string]: SigningSchemeHash;
};
export declare const COSECRV: {
    [key: number]: string;
};
export declare const COSEALGHASH: {
    [key: string]: string;
};
